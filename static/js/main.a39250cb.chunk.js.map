{"version":3,"sources":["store/index.ts","api/api.ts","components/UserForm/UserForm.tsx","components/TableBody/TableBody.tsx","components/UsersTable/UsersTable.tsx","App.tsx","index.tsx"],"names":["GET_USERS","GET_USERID","GET_ERROR","OPEN_FORM","CORRECT_FORM","GET_START","actions","users","type","userId","messageError","isOpenForm","isCorrectForm","start","selectors","state","initialState","store","createStore","action","composeWithDevTools","request","url","options","a","fetch","response","json","catch","error","Error","result","getUsersFromServer","method","createUserOnServer","newUser","data","headers","body","JSON","stringify","updateUserOnServer","correctData","deleteUserFromServer","UserForm","useSelector","idCorrectUser","loadedUsers","dispatch","useDispatch","useState","nameUser","setNameUser","surnameUser","setSurnameUser","descUser","setDescUser","setUserId","version","setVersion","textError","setTextError","isName","setIsName","isSurname","setIsSurname","isDesc","setIsDesc","isUserId","setIsUserId","isVersion","setIsVersion","resetFields","handlerAddUser","event","preventDefault","isNameValid","trim","length","isSurnameValid","isDescValid","isUserIdValid","isVersionValid","newUserInfo","_id","String","Date","name","surname","desc","user_id","__v","upgradedUsers","handlerCorrectUser","useCallback","correctUserInfo","find","user","index","findIndex","className","classNames","onClick","placeholder","value","onChange","target","cols","readOnly","disabled","required","TableBody","startIndex","visibleUsers","slice","useEffect","handlerRemoveUser","idOfUser","shortenUsers","filter","map","person","UsersTable","isNext","setIsNext","isPrev","setIsPrev","handlerNext","amountUsers","handlerPrev","App","handlerOpenForm","usersFromServer","hidden","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a39250cb.chunk.js","sourcesContent":["import { AnyAction, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { User } from '../types/UserType';\n\nconst GET_USERS = 'GET_USERS';\nconst GET_USERID = 'GET_USERID';\nconst GET_ERROR = 'GET_ERROR';\nconst OPEN_FORM = 'OPEN_FORM';\nconst CORRECT_FORM = 'CORRECT_FORM';\nconst GET_START = 'GET_START';\n\nexport const actions = {\n  getLocalUsers: (users: User[]) => ({\n    type: GET_USERS,\n    users,\n  }),\n  getLocalUserId: (userId: number) => ({\n    type: GET_USERID,\n    userId,\n  }),\n  getError: (messageError: string) => ({\n    type: GET_ERROR,\n    messageError,\n  }),\n  getIsOpenForm: (isOpenForm: boolean) => ({\n    type: OPEN_FORM,\n    isOpenForm,\n  }),\n  getIsCorrectForm: (isCorrectForm: boolean) => ({\n    type: CORRECT_FORM,\n    isCorrectForm,\n  }),\n  getStartIndex: (start: number) => ({\n    type: GET_START,\n    start,\n  }),\n};\n\nexport const selectors = {\n  loadUsers: (state: RootState) => state.users,\n  getUserId: (state: RootState) => state.userId,\n  getMessageError: (state: RootState) => state.messageError,\n  getIsOpenForm: (state: RootState) => state.isOpenForm,\n  getIsCorrectForm: (state: RootState) => state.isCorrectForm,\n  getStartIndex: (state: RootState) => state.start,\n};\n\nexport type RootState = {\n  users: User[],\n  userId: number,\n  messageError: string,\n  isOpenForm: boolean,\n  isCorrectForm: boolean,\n  start: number,\n};\n\nconst initialState: RootState = {\n  users: [],\n  userId: 0,\n  messageError: '',\n  isOpenForm: false,\n  isCorrectForm: false,\n  start: 0,\n};\n\nconst rootReducer = (\n  state = initialState,\n  action: AnyAction,\n) => {\n  switch (action.type) {\n    case GET_USERS:\n      return { ...state, users: action.users };\n\n    case GET_USERID:\n      return { ...state, userId: action.userId };\n\n    case GET_ERROR:\n      return { ...state, messageError: action.messageError };\n\n    case OPEN_FORM:\n      return { ...state, isOpenForm: action.isOpenForm };\n\n    case CORRECT_FORM:\n      return { ...state, isCorrectForm: action.isCorrectForm };\n\n    case GET_START:\n      return { ...state, start: action.start };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","import { User } from '../types/UserType';\n\nconst API_URL = 'http://23.88.43.148';\n\nconst request = async (url: string, options: {}) => {\n  const response = await fetch(`${API_URL}${url}`, options);\n\n  const result = await response.json()\n    .catch(error => {\n      throw Error(`${error}`);\n    });\n\n  return result;\n};\n\nexport const post = (url: string, data: User): Promise<void> => {\n  return request(url, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  });\n};\n\nexport const correct = (url: string, data: Partial<User>): Promise<void> => {\n  return request(url, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  });\n};\n\nexport const remove = (url: string) => {\n  return request(url, { method: 'DELETE' });\n};\n\nexport const getUsersFromServer = async (): Promise<User[]> => {\n  const result = await request('/users', { method: 'GET' });\n\n  return result;\n};\n\nexport const createUserOnServer = (newUser: User) => {\n  return post('/users', newUser);\n};\n\nexport const updateUserOnServer = (userId: number, correctData: Partial<User>) => {\n  return correct((`/user/${userId}`), correctData);\n};\n\nexport const deleteUserFromServer = (userId: number) => {\n  return remove(`/user/${userId}`);\n};\n","import classNames from 'classnames';\nimport React, { SyntheticEvent, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createUserOnServer, updateUserOnServer } from '../../api/api';\nimport { actions, selectors } from '../../store';\nimport '../../styles/main.scss';\n\nexport const UserForm: React.FC = () => {\n  const isOpenForm = useSelector(selectors.getIsOpenForm);\n  const isCorrectForm = useSelector(selectors.getIsCorrectForm);\n  const idCorrectUser = useSelector(selectors.getUserId);\n  const loadedUsers = useSelector(selectors.loadUsers);\n  const dispatch = useDispatch();\n  const [nameUser, setNameUser] = useState('');\n  const [surnameUser, setSurnameUser] = useState('');\n  const [descUser, setDescUser] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [version, setVersion] = useState(0);\n  const [textError, setTextError] = useState('');\n  const [isName, setIsName] = useState(true);\n  const [isSurname, setIsSurname] = useState(true);\n  const [isDesc, setIsDesc] = useState(true);\n  const [isUserId, setIsUserId] = useState(true);\n  const [isVersion, setIsVersion] = useState(true);\n\n  const handlerCloseForm = () => {\n    dispatch(actions.getIsOpenForm(false));\n    dispatch(actions.getIsCorrectForm(false));\n  };\n\n  const resetFields = () => {\n    setNameUser('');\n    setSurnameUser('');\n    setDescUser('');\n    setUserId(0);\n    setVersion(0);\n  };\n\n  const chekName = () => {\n    if (nameUser.trim().length > 0) {\n      setIsName(true);\n\n      return true;\n    }\n\n    setIsName(false);\n\n    return false;\n  };\n\n  const chekSurname = () => {\n    if (surnameUser.trim().length > 0) {\n      setIsSurname(true);\n\n      return true;\n    }\n\n    setIsSurname(false);\n\n    return false;\n  };\n\n  const chekDesc = () => {\n    if (descUser.trim().length > 0) {\n      setIsDesc(true);\n\n      return true;\n    }\n\n    setIsDesc(false);\n\n    return false;\n  };\n\n  const chekUserId = () => {\n    if (userId > 0) {\n      setIsUserId(true);\n\n      return true;\n    }\n\n    setIsUserId(false);\n\n    return false;\n  };\n\n  const chekVersion = () => {\n    if (version > 0) {\n      setIsVersion(true);\n\n      return true;\n    }\n\n    setIsVersion(false);\n\n    return false;\n  };\n\n  const handlerAddUser = (event: SyntheticEvent) => {\n    event.preventDefault();\n    const isNameValid = chekName();\n    const isSurnameValid = chekSurname();\n    const isDescValid = chekDesc();\n    const isUserIdValid = chekUserId();\n    const isVersionValid = chekVersion();\n\n    if (isNameValid\n      && isSurnameValid\n      && isDescValid\n      && isUserIdValid\n      && isVersionValid\n    ) {\n      const newUserInfo = {\n        _id: String(+new Date()),\n        name: nameUser,\n        surname: surnameUser,\n        desc: descUser,\n        user_id: userId,\n        // eslint-disable-next-line no-underscore-dangle\n        __v: version,\n      };\n\n      const upgradedUsers = [...loadedUsers, newUserInfo];\n\n      setTextError('');\n      dispatch(actions.getIsOpenForm(false));\n      dispatch(actions.getLocalUsers(upgradedUsers));\n      createUserOnServer(newUserInfo);\n      resetFields();\n    } else {\n      setTextError('Please enter correct data');\n    }\n  };\n\n  const handlerCorrectUser = useCallback((event: SyntheticEvent) => {\n    event.preventDefault();\n    dispatch(actions.getIsCorrectForm(false));\n    dispatch(actions.getIsOpenForm(false));\n\n    const correctUserInfo = loadedUsers.find(user => user.user_id === idCorrectUser);\n    const index = loadedUsers.findIndex(user => user.user_id === idCorrectUser);\n\n    if (correctUserInfo) {\n      if (nameUser.trim().length > 0) {\n        correctUserInfo.name = nameUser;\n      }\n\n      if (surnameUser.trim().length > 0) {\n        correctUserInfo.surname = surnameUser;\n      }\n\n      if (descUser.trim().length > 0) {\n        correctUserInfo.desc = descUser;\n      }\n\n      if (userId > 0) {\n        correctUserInfo.user_id = userId;\n      }\n\n      if (version > 0) {\n        // eslint-disable-next-line no-underscore-dangle\n        correctUserInfo.__v = version;\n      }\n\n      loadedUsers[index] = correctUserInfo;\n      dispatch(actions.getLocalUsers(loadedUsers));\n      updateUserOnServer(idCorrectUser, correctUserInfo);\n      resetFields();\n    }\n  }, [loadedUsers, nameUser, surnameUser, descUser, userId, version, idCorrectUser, dispatch]);\n\n  return (\n    <div className={classNames(\n      'UserForm',\n      {\n        'UserForm--active': isOpenForm || isCorrectForm,\n      },\n    )}\n    >\n      <fieldset\n        className=\"UserForm__fieldset\"\n      >\n        <legend\n          className=\"UserForm__subtitle\"\n        >\n          Enter iformation about the user\n        </legend>\n        <button\n          type=\"button\"\n          className=\"UserForm__button-close\"\n          onClick={handlerCloseForm}\n        >\n          Close form without adding\n        </button>\n        <form\n          method=\"POST\"\n          className=\"UserForm__form\"\n        >\n          <div className=\"UserForm__form--container-out\">\n            <div className=\"UserForm__form--container-in\">\n              <div className=\"UserForm__field\">\n                <p className=\"UserForm__name\">\n                  Input name:\n                </p>\n                <input\n                  className=\"UserForm__input\n                  UserForm__input--name\"\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"name\"\n                  value={nameUser}\n                  onChange={(event) => setNameUser(event.target.value)}\n                />\n              </div>\n              {!isName ? (\n                <p className=\"UserForm__error\">{textError}</p>\n              ) : (\n                <p className=\"UserForm__error\" />\n              )}\n              <div className=\"UserForm__field\">\n                <p className=\"UserForm__name\">\n                  Input surname:\n                </p>\n                <input\n                  className=\"UserForm__input\n                  UserForm__input--username\"\n                  type=\"text\"\n                  name=\"surname\"\n                  placeholder=\"username\"\n                  value={surnameUser}\n                  onChange={(event) => setSurnameUser(event.target.value)}\n                />\n              </div>\n              {!isSurname ? (\n                <p className=\"UserForm__error\">{textError}</p>\n              ) : (\n                <p className=\"UserForm__error\" />\n              )}\n              <div className=\"UserForm__field\">\n                <p className=\"UserForm__name\">\n                  Input description:\n                </p>\n                <textarea\n                  className=\"UserForm__input\n                  UserForm__input--desc\"\n                  cols={30}\n                  name=\"desc\"\n                  placeholder=\"...\"\n                  value={descUser}\n                  onChange={(event) => setDescUser(event.target.value)}\n                />\n              </div>\n              {!isDesc ? (\n                <p className=\"UserForm__error\">{textError}</p>\n              ) : (\n                <p className=\"UserForm__error\" />\n              )}\n            </div>\n\n            <div className=\"UserForm__form--container-in\">\n              <div className=\"UserForm__field\">\n                <p className=\"UserForm__name\">\n                  Input ID of user:\n                </p>\n                <input\n                  className=\"UserForm__input\n                  UserForm__input--userId\"\n                  type=\"number\"\n                  name=\"userId\"\n                  placeholder=\"not used\"\n                  readOnly={isCorrectForm}\n                  disabled={isCorrectForm}\n                  value={isCorrectForm ? ('') : `${userId}`}\n                  onChange={(event) => setUserId(+event.target.value)}\n                />\n              </div>\n              {!isUserId ? (\n                <p className=\"UserForm__error\">{textError}</p>\n              ) : (\n                <p className=\"UserForm__error\" />\n              )}\n              <div className=\"UserForm__field\">\n                <p className=\"UserForm__name\">\n                  Input version:\n                </p>\n                <input\n                  className=\"UserForm__input\n                  UserForm__input--version\"\n                  type=\"number\"\n                  name=\"version\"\n                  placeholder=\"245\"\n                  required\n                  value={version}\n                  onChange={(event) => setVersion(+event.target.value)}\n                />\n              </div>\n              {!isVersion ? (\n                <p className=\"UserForm__error\">{textError}</p>\n              ) : (\n                <p className=\"UserForm__error\" />\n              )}\n            </div>\n          </div>\n          <div className=\"UserForm__buttons\">\n            <button\n              type=\"submit\"\n              className={classNames(\n                'UserForm__button-add',\n                {\n                  'UserForm__button-add--passive': isCorrectForm,\n                },\n              )}\n              disabled={!isOpenForm}\n              onClick={(event) => handlerAddUser(event)}\n            >\n              Add a new user\n            </button>\n            <button\n              type=\"submit\"\n              className={classNames(\n                'UserForm__button-add',\n                {\n                  'UserForm__button-add--passive': isOpenForm,\n                },\n              )}\n              disabled={!isCorrectForm}\n              onClick={(event) => handlerCorrectUser(event)}\n            >\n              Correct the user\n            </button>\n          </div>\n        </form>\n      </fieldset>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteUserFromServer } from '../../api/api';\nimport { actions, selectors } from '../../store';\nimport { User } from '../../types/UserType';\n\nexport const TableBody: React.FC = () => {\n  const loadedUsers: User[] = useSelector(selectors.loadUsers);\n  const startIndex: number = useSelector(selectors.getStartIndex);\n  const dispatch = useDispatch();\n\n  let visibleUsers = loadedUsers.slice(startIndex, startIndex + 5);\n\n  useEffect(() => {\n    visibleUsers = loadedUsers.slice(startIndex, startIndex + 5);\n  }, []);\n\n  const handlerRemoveUser = useCallback((idOfUser: number) => {\n    deleteUserFromServer(idOfUser);\n    const shortenUsers = loadedUsers.filter(user => user.user_id !== idOfUser);\n\n    dispatch(actions.getLocalUsers(shortenUsers));\n  }, [dispatch, loadedUsers]);\n\n  const handlerCorrectUser = useCallback(\n    (idOfUser: number) => {\n      const userToCorrect = loadedUsers.find(user => user.user_id === idOfUser);\n\n      if (userToCorrect) {\n        dispatch(actions.getIsOpenForm(false));\n        dispatch(actions.getIsCorrectForm(true));\n        dispatch(actions.getLocalUserId(idOfUser));\n      }\n    }, [dispatch, loadedUsers],\n  );\n\n  return (\n    <>\n      {loadedUsers.length > 0 && (\n        visibleUsers.map((person) => (\n          <tr\n            className=\"TableBody__body--row\"\n            // eslint-disable-next-line\n            key={person._id}\n          >\n            <td className=\"TableBody__body--cell\">\n              <p className=\"TableBody__body--text\">\n                {person.name}\n              </p>\n              <button\n                className=\"TableBody__body--button\"\n                type=\"button\"\n                onClick={() => handlerCorrectUser(person.user_id)}\n              >\n                Correct user\n              </button>\n            </td>\n            <td className=\"TableBody__body--cell\">\n              {person.surname}\n            </td>\n            <td className=\"TableBody__body--cell\">\n              {person.desc}\n            </td>\n            <td className=\"TableBody__body--cell\">\n              <button\n                type=\"button\"\n                className=\"TableBody__body--button\"\n                // eslint-disable-next-line no-underscore-dangle\n                onClick={() => handlerRemoveUser(person.user_id)}\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        ))\n      )}\n    </>\n  );\n};\n","import '../../styles/main.scss';\nimport React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TableBody } from '../TableBody';\nimport { actions, selectors } from '../../store';\nimport { User } from '../../types/UserType';\n\nexport const UsersTable: React.FC = () => {\n  const loadedUsers: User[] = useSelector(selectors.loadUsers);\n  const start: number = useSelector(selectors.getStartIndex);\n  const dispatch = useDispatch();\n  const [isNext, setIsNext] = useState(false);\n  const [isPrev, setIsPrev] = useState(true);\n\n  const handlerNext = useCallback(() => {\n    const index = start + 5;\n    const amountUsers = loadedUsers.length;\n\n    if (index < amountUsers) {\n      dispatch(actions.getStartIndex(index));\n      setIsNext(false);\n      setIsPrev(false);\n    }\n\n    if (index >= amountUsers - 5) {\n      setIsNext(true);\n    }\n  }, [dispatch, loadedUsers, start]);\n\n  const handlerPrev = useCallback(() => {\n    const index = start - 5;\n\n    if (index >= 0) {\n      dispatch(actions.getStartIndex(index));\n      setIsPrev(false);\n      setIsNext(false);\n    }\n\n    if (index <= 0) {\n      setIsPrev(true);\n    }\n  }, [dispatch, start]);\n\n  return (\n    <>\n      {loadedUsers.length > 0\n        ? (\n          <>\n            <table className=\"UserTable\">\n              <caption className=\"UserTable__title\">\n                Information about members of our cooperative\n              </caption>\n              <thead className=\"UserTable__head\">\n                <tr\n                  className=\"UserTable__head--row\"\n                >\n                  <th\n                    className=\"UserTable__head--cell\"\n                  >\n                    Name\n                  </th>\n                  <th\n                    className=\"UserTable__head--cell\"\n                  >\n                    Surname\n                  </th>\n                  <th\n                    className=\"UserTable__head--cell\"\n                  >\n                    Description\n                  </th>\n                  <th className=\"UserTable__head--cell\">\n                    Delete\n                  </th>\n                </tr>\n              </thead>\n              <tbody\n                className=\"UserTable__body\"\n              >\n                <TableBody />\n              </tbody>\n            </table>\n\n            <div className=\"UserTable__buttons\">\n              <button\n                type=\"button\"\n                className=\"UserTable__button\"\n                disabled={isPrev}\n                onClick={handlerPrev}\n              >\n                Previous 5\n              </button>\n              <button\n                type=\"button\"\n                className=\"UserTable__button\"\n                disabled={isNext}\n                onClick={handlerNext}\n              >\n                Next 5\n              </button>\n            </div>\n          </>\n        )\n        : (\n          <p className=\"UserTable__error\">\n            No information about users\n          </p>\n        )}\n    </>\n  );\n};\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUsersFromServer } from './api/api';\nimport { UserForm } from './components/UserForm/UserForm';\nimport { UsersTable } from './components/UsersTable';\nimport { actions, selectors } from './store';\nimport './styles/main.scss';\n\nexport const App = () => {\n  const messageError = useSelector(selectors.getMessageError);\n  const isOpenForm = useSelector(selectors.getIsOpenForm);\n  const isCorrectForm = useSelector(selectors.getIsCorrectForm);\n  const dispatch = useDispatch();\n\n  const handlerOpenForm = useCallback(() => {\n    dispatch(actions.getIsOpenForm(true));\n    dispatch(actions.getIsCorrectForm(false));\n  }, [dispatch]);\n\n  useEffect(() => {\n    async function response() {\n      try {\n        const usersFromServer = await getUsersFromServer();\n\n        dispatch(actions.getLocalUsers(usersFromServer));\n      } catch {\n        dispatch(actions.getError('Can not load users'));\n      }\n    }\n\n    response();\n  }, [dispatch]);\n\n  return (\n    <main className=\"App\">\n      <h1 className=\"App__title\">\n        Information about users of our products.\n      </h1>\n      <button\n        type=\"button\"\n        className=\"App__button\n        App__button--opener\"\n        hidden={isOpenForm || isCorrectForm}\n        onClick={handlerOpenForm}\n      >\n        Open form for user\n      </button>\n      {messageError.length === 0\n        ? (\n          <>\n            <UserForm />\n            <UsersTable />\n          </>\n        )\n        : (<p className=\"App__error\">{messageError}</p>)}\n    </main>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}